---
- name: "Check if errors recorded in {{ opentlc_student_error_file }} exists"
  stat:
    path: "{{ opentlc_student_error_file }}"
  register: r_opentlc_student_error_file

- when: r_opentlc_student_error_file.stat.exists
  name: If log file exists - process errors  
  block:

    - name: Get the student errors from the log file
      command: "cat {{ opentlc_student_error_file }}"
      register: r_opentlc_errors

    - name: Iterate through log file appending to fact
      set_fact:
        opentlc_log_content: "{{ ( opentlc_log_content | default([])) +  [( item )] }}"
      with_items: "{{ r_opentlc_errors.stdout_lines | sort }}"

    - name:  Generate student error report
      template:
        src: lab_error_report.j2
        dest: "{{ opentlc_grading_file }}"
        #dest: /tmp/error_report.txt

    - name: Set lab_passed to false
      set_fact:
        lab_passed: false

- when: not r_opentlc_student_error_file.stat.exists
  name: Student has passed lab
  block:

    - name:  Generate student success report
      template:
        src: lab_success_report.j2
        dest: "{{ opentlc_grading_file }}"

    - name: Set lab_passed to true
      set_fact:
        lab_passed: true

#- name: Get report hash
#  stat:
#    path: "{{ opentlc_grading_file }}"
#    checksum_algorithm: sha256
#  register: st
#
#- name: Sign student report
#  lineinfile:
#    path: "{{ opentlc_grading_file }}"
#    line: "{{ st.stat.checksum }}  {{ opentlc_grading_file }}"
...
