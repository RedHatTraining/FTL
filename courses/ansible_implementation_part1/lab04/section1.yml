- name: infra-ec2-wait_for_linux_hosts
  hosts:
    - all:!windows
  become: true
  gather_facts: no
  roles:
  - { role: "infra-ec2-wait_for_linux_hosts" }

###############     Play for solutions  ###############
- import_playbook: ./solve_section1.yml
  when: solve == "true"

###############     Play1 for grade     ###############
- name: Verify section1
  hosts: apps:appdbs:frontends
  gather_facts: no
  tasks:

#****************************#
########## Grade 1 ########### 
#****************************#
  - name: Check httpd service status
    service:
      name: firewalld
    register: firewalld_output  

  - name: Check httpd service status
    service:
      name: httpd
    register: httpd_output  
    when: inventory_hostname in groups['apps']

  - name: Check httpd service status
    service:
      name: haproxy
    register: haproxy_output   
    when: inventory_hostname in groups['frontends']
  
  - name: Check httpd service status
    service:
      name: mysqld
    register: mysqld_output   
    when: inventory_hostname in groups['appdbs']
    
#### condiation1 Fail ####
  - name: Fail if firewalld service is not started
    set_fact:
        result:  
          - "{{ inventory_hostname }} : Fail"
        reason: 
          - "{{  inventory_hostname }}  :  firewalld service is not started" 
    when: ( firewalld_output.status.UnitFileState is not defined ) or ( firewalld_output.status.ActiveState != "active" )

  - name: Fail if httpd service is not started
    set_fact:
        result: 
          - "{{ inventory_hostname }} : FAIL" 
        reason: 
          - "{{ inventory_hostname }} : httpd service is not started" 
    when: ( inventory_hostname in groups['apps'] )   and 
          (( httpd_output.status.UnitFileState is not defined ) or ( httpd_output.status.ActiveState != "active" ))

  - name: Fail if haproxy service is not started
    set_fact:
        result: 
          - "{{  inventory_hostname}} : FAIL" 
        reason: 
          - "{{ [ inventory_hostname }} : haproxy service is not started" 
    when: ( inventory_hostname in groups['frontends'] )   and 
          (( haproxy_output.status.UnitFileState is not defined ) or ( haproxy_output.status.ActiveState != "active" ))

  - name: Fail if mysqld service is not started
    set_fact:
        result: 
          - "{{ inventory_hostname }} : FAIL" 
        reason: 
          - "{{  inventory_hostname }} : mysqld service is not started" 
    when: ( inventory_hostname in groups['appdbs'] )   and 
          (( mysqld_output.status.UnitFileState is not defined ) or ( mysqld_output.status.ActiveState != "active" ))

#### condiation1 Psss ####
  - name: Pass if firewalld service is started
    set_fact:
        result: 
          - "{{  inventory_hostname }} : Pass" 
        reason: 
          - "{{  inventory_hostname }} : firewalld service is started" 
    when: ( firewalld_output.status.UnitFileState is defined ) and
          ( firewalld_output.status.ActiveState == "active" ) 

  - name: Pass if httpd service is started
    set_fact:
        result: 
          - "{{ inventory_hostname }} : Pass" 
        reason: 
          - "{{  inventory_hostname }} : httpd service is started" 
    when: ( inventory_hostname in groups['apps'] )          and
          ( httpd_output.status.UnitFileState is defined )  and
          ( httpd_output.status.ActiveState == "active" )

  - name: Pass if haproxy service is started
    set_fact:
        result: 
          - "{{  inventory_hostname }} : Pass" 
        reason: 
          - "{{ inventory_hostname }} : haproxy service is started" 
    when: ( inventory_hostname in groups['frontends'] )       and
          ( haproxy_output.status.UnitFileState is defined )  and
          ( haproxy_output.status.ActiveState == "active" )

  - name: Pass if mysqld service is started
    set_fact:
        result: 
          - "{{  inventory_hostname }} : Pass" 
        reason: 
          - "{{ inventory_hostname }} : mysqld service is started" 
    when: ( inventory_hostname in groups['appdbs'] )          and
          ( mysqld_output.status.UnitFileState is defined )   and
          ( mysqld_output.status.ActiveState == "active"  )

  # - debug: var=reason
  # - debug: var=result
#******************* Concatenate list, Must be included at the end of each play in playbook ***********************#
  - name: Include concatenate assessment_result role in play1
    include_role: 
      name: assessment_result
 # - debug: var=assessment_result
#************************        End of Concatenate list, Must be included         ********************************#


###############     Play2 for grade      ###############
- name: Verify Section2
  hosts: frontends
  gather_facts: no
  tasks:

#****************************#
########## Grade 2 ########### 
#****************************# 
  - name: Run a Curl Test against Frontend
    uri:
      url: http://{{ hostvars.frontend.ansible_host }}/?name=kiosk
      status_code: 403,200,-1
      return_content: yes
    register: webpage

#### condiation2 Fail ####
  - name: Check kiosk data in db fail
    set_fact:
      result: "{{ result + [ inventory_hostname + ' : FAIL' ] }}" 
      reason: "{{ reason + [ inventory_hostname + ' : kiosk is not present' ] }}" 
    when: ( webpage.status == -1 )  and 
          ("'kiosk redhat /bin/bash /home/kiosk' not in webpage.content")

#### condiation2 Pass ####
  - name: Check kiosk data in db pass
    set_fact:
      result: "{{ result + [ inventory_hostname + ' : Pass' ] }}" 
      reason: "{{ reason + [ inventory_hostname + ' : kiosk  is present' ] }}"  
        
    when:  "'kiosk redhat /bin/bash /home/kiosk' in webpage.content"

  # - debug: var=reason
  # - debug: var=result
#******************* Concatenate list, Must be included at the end of each play in playbook ***********************#
  - name: Include concatenate assessment_result role in play2
    include_role: 
      name: assessment_result
 # - debug: var=assessment_result
#************************        End of Concatenate list, Must be included         ********************************#


############## Play for Adding variable back to localhost ##############################
- name: append grade list from section1
  hosts: localhost
  tasks:
  - name: setting up section1 array
    set_fact:
      array:
        section1:
          result: 
              - "{{ hostvars['app1']['result'] }}"
              - "{{ hostvars['app2']['result'] }}"
              - "{{ hostvars['frontend']['result'] }}"
              - "{{ hostvars['appdb']['result'] }}"

          reason:
              - "{{ hostvars['app1']['reason'] }}"
              - "{{ hostvars['app2']['reason'] }}"
              - "{{ hostvars['frontend']['reason'] }}"
              - "{{ hostvars['appdb']['reason'] }}"
          assessment_result:
              - "{{ hostvars['app1']['assessment_result'] }}"
              - "{{ hostvars['app2']['assessment_result'] }}"
              - "{{ hostvars['frontend']['assessment_result'] }}"
              - "{{ hostvars['appdb']['assessment_result'] }}"

  -  set_fact:   
      grade_status: "{{ grade_status | combine(array) }}"