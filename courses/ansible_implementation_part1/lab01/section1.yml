
- name: infra-ec2-wait_for_linux_hosts
  hosts:
    - all:!windows
  become: true
  gather_facts: no
  roles:
  - { role: "infra-ec2-wait_for_linux_hosts" }

- import_playbook: ./solve_section1.yml
  when: solve == "true"

- name: Verify Section1
  hosts: all:!bastions
  gather_facts: no
  tasks:
############# condiation1 #############
    - name: Verify devops user is created
      shell: "grep devops /etc/passwd | cut -d: -f1"
      register: user_created
    - debug:
        msg: "Success: devops user present"
      when: user_created.stdout == "devops"
    - debug:
        msg: "Fail: devops user present"
      when: user_created.stdout != "devops"
############# condiation1 Fail #############
    - name: set grade to fail
      set_fact:
        result: 
          - "{{ inventory_hostname }} : FAIL"
        reason: 
          - "{{inventory_hostname}} : devops user not present."
      when: user_created.stdout != "devops"
############# condiation1 Pass #############
    - name: set grade to Pass
      set_fact:
        result: 
          - "{{ inventory_hostname }} : PASS"
        reason: 
          - "{{inventory_hostname}} : devops user is present."
      when: user_created.stdout == "devops"

############# condiation2 #############
    - name: Verify /etc/motd has content
      shell: "cat /etc/motd"
      register: motd
    - debug:
        msg: "Success: /etc/motd has required content"
      when: motd.stdout == "Managed by Ansible"
    - debug:
        msg: "Fail: /etc/motd has required content"
      when: motd.stdout != "Managed by Ansible"

############# condiation2 Fail #############
    - name: set grade to fail
      set_fact:
        result: "{{ result + [ inventory_hostname + ' : FAIL' ] }}" 
        reason: "{{ reason + [ inventory_hostname + ' : /etc/motd missing content' ] }}"
      when: motd.stdout != "Managed by Ansible"


############# condiation2 Pass #############
    - name: set grade to Pass
      set_fact:
        result: "{{ result + [ inventory_hostname + ' : PASS' ] }}" 
        reason: "{{ reason + [ inventory_hostname + ' : /etc/motd missing content' ] }}"
      when: motd.stdout == "Managed by Ansible"
    
  # - debug: var=reason
  # - debug: var=result

############## Play for Adding variable back to localhost ##############################
- name: append grade list from section2
  hosts: localhost
  tasks:
  - name: setting up section2 array
    set_fact:
      array:
        section1:
          result: 
              - "{{ hostvars['app1']['result'] }}"
              - "{{ hostvars['app2']['result'] }}"
          reason:
              - "{{ hostvars['app1']['reason'] }}"
              - "{{ hostvars['app2']['reason'] }}"

  -  set_fact:   
      grade_status: "{{ grade_status | combine(array) }}"

