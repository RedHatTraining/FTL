- name: infra-ec2-wait_for_linux_hosts
  hosts:
    - all:!windows
  become: true
  gather_facts: no
  roles:
  - { role: "infra-ec2-wait_for_linux_hosts" }

- import_playbook: ./solve_section1.yml
  when: solve == "true"

#################################################
- name: Verify section1
  hosts: bastions
  become: yes
  gather_facts: no
  vars:
    step_no: 2
    file_path: /home/devops/ansible_implementation
    file_and_password:
      vault-pass: redhat 
      vault-pass-change: ansible   
  tasks:
  - name: array
    set_fact:
      result: [] 
      reason: []
       
#****************************#
########## Grade 1 ########### 
#****************************#
  - name: Check files
    stat:
      path: "{{ item }}"
    register: stat_output
    loop: 
      - "{{ file_path }}/super-secret.yml"
      - "{{ file_path }}/super-secret-decrypted.yml"  
      - "{{ file_path }}/super-secret-encrypted.yml"

#### condiation1 Fail ####
  - name: File check fail 0
    set_fact:
      result: "{{ result + [ inventory_hostname + ' : FAIL' ] }}" 
      reason:  "{{ reason }} +  [ '{{ inventory_hostname }}'  + ' : files ' +  '{{ stat_output.results.0.item }}' + ' does not exist.'  ] " 
    when:  not stat_output.results.0.stat.exists
        
  - name:  File check fail 1
    set_fact:
      result: "{{ result + [ inventory_hostname + ' : FAIL' ] }}" 
      reason:  "{{ reason }} +  [ '{{ inventory_hostname }}'  + ' : files ' +  '{{ stat_output.results.1.item }}' + ' does not exist.'  ] "     
    when:  not stat_output.results.1.stat.exists 

  - name:  File check fail 2
    set_fact:
      result: "{{ result + [ inventory_hostname + ' : FAIL' ] }}" 
      reason:  "{{ reason }} +  [ '{{ inventory_hostname }}'  + ' : files ' +  '{{ stat_output.results.2.item }}' + ' does not exist.'  ] "  
    when:  not stat_output.results.2.stat.exists  
  
#### condiation1 Pass #### 

  - name: File check pass 0
    set_fact:
      result: "{{ result + [ inventory_hostname + ' : FAIL' ] }}" 
      reason:  "{{ reason }} +  [ '{{ inventory_hostname }}'  + ' : files ' +  '{{ stat_output.results.0.item }}' + '  exist.'  ] " 
    when:  stat_output.results.0.stat.exists
        
  - name:  File check pass 1
    set_fact:
      result: "{{ result + [ inventory_hostname + ' : FAIL' ] }}" 
      reason:  "{{ reason }} +  [ '{{ inventory_hostname }}'  + ' : files ' +  '{{ stat_output.results.1.item }}' + '  exist.'  ] "     
    when:  stat_output.results.1.stat.exists 

  - name:  File check pass 2
    set_fact:
      result: "{{ result + [ inventory_hostname + ' : FAIL' ] }}" 
      reason:  "{{ reason }} +  [ '{{ inventory_hostname }}'  + ' : files ' +  '{{ stat_output.results.2.item }}' + ' exist.'  ] "  
    when:  stat_output.results.2.stat.exists  

#****************************#
########## Grade 2 ########### 
#****************************#  
    - name: Create Password file1
      copy:
        content: "{{ item.value }}"
        dest: /tmp/{{ item.key }}
        mode: 0600  
        owner: devops
        group: devops 
      loop: "{{ file_and_password |dict2items }}"

  - name: Checking super-secret.yml files
    shell: export ansibleansible-vault view "{{ file_path }}/super-secret.yml" --vault-password-file=/tmp/vault-pass-change
    register: secret_output

  - name: Checking super-secret-encrypted.yml files
    shell: export ansibleansible-vault view "{{ file_path }}/super-secret-encrypted.yml" --vault-password-file=/tmp/vault-pass
    register: secret_encrypted_output

  - debug: var=secret_output
  - debug: var=secret_encrypted_output

#***********************************************************#
#   # - debug: var=reason
#   # - debug: var=result

############## Play for Adding variable back to localhost ##############################
- name: append grade list from section1
  hosts: localhost
  tasks:
  - name: setting up section1 array
    set_fact:
      array:
        section1:
          result: 
              - "{{ hostvars['bastion']['result'] }}" 
          reason:
              - "{{ hostvars['bastion']['reason'] }}"
              

  -  set_fact:   
      grade_status: "{{ grade_status | combine(array) }}"