---
- name: Run grader
  hosts: bastions
  gather_facts: false
  become: false
  vars_files:
    - /home/devops/materials/access_details.yml
  
  tasks:
    - name: List gitlab webhook
      uri: 
        url: http://{{ access_details.gitlab_hostname }}//api/v4/projects/1/hooks/
        method: GET
        headers:
          PRIVATE-TOKEN: "{{ access_details.gitlab_root_token }}"
      register: gitlab_webhook_list
           
    - set_fact:
        gitlab_webhook_urls: "{{ gitlab_webhook_urls | d([]) + [ item.url ] }}"
      loop: "{{ gitlab_webhook_list.json }}"
           
    # - debug: var=gitlab_webhook_urls

    - name: "Success - set fact"
      set_fact:
        success: true
      when: gitlab_webhook_urls > 1

    - name: "No Success - set fact"
      set_fact:
        success: false
      when: gitlab_webhook_urls < 1
      
    - name: Import logging role
      import_role:
        name: ftl_run_log_grade_to_log
      vars:
        task_description_message: "Gitlab project webhooks"
        

### Credentials test  
    - name: Credential's List
      uri: 
        url: https://{{ access_details.tower_hostname }}/api/v2/credentials/
        user: "{{ access_details.tower_admin_user }}"
        password: "{{ access_details.tower_admin_password }}"
        method: GET
        force_basic_auth: yes
        validate_certs: false
        body_format: json
        status_code: 200
      register: credential_list

    - set_fact:
        credential_names : "{{ credential_names |d([]) + [ item.id  | string + ':' + item.name ] }}"
      loop: "{{ credential_list.json.results }}"

    - name: find id of gitlab_token credentials
      set_fact: 
        gitlab_token_id: "{{ item.split(':')[0] }}"
      loop: "{{ credential_names }}"
      when: '"gitlab_token" in item'

#### Tower webhooks       
    - name: Jobtemplate list
      uri: 
        url: https://{{ access_details.tower_hostname }}/api/v2/job_templates/
        user: "{{ access_details.tower_admin_user }}"
        password: "{{ access_details.tower_admin_password }}"
        method: GET
        force_basic_auth: yes
        validate_certs: false
        body_format: json
        status_code: 200
      register: jobtemplate_list

    - name: find id for Prod job template
      set_fact: 
        test_job_template_id: "{{ item.id }}"
      loop: "{{ jobtemplate_list.json.results }}"
      when: '"Test" in item.name' 

    - name: find id for Prod job template
      set_fact: 
        prod_job_template_id: "{{ item.id }}"
      loop: "{{ jobtemplate_list.json.results }}"
      when: '"Prod" in item.name'    
         
    - name: Jobtemplate webhook key
      loop: "{{ jobtemplate_list.json.results }}"
      uri: 
        url: https://{{ access_details.tower_hostname }}/api/v2/job_templates/{{ item.id }}/webhook_key/
        user: "{{ access_details.tower_admin_user }}"
        password: "{{ access_details.tower_admin_password }}"
        method: GET
        force_basic_auth: yes
        validate_certs: false
        body_format: json
        status_code: 200
      register: jt_webhook
           
    - set_fact:
        jobtemplate_webhooks : "{{ jobtemplate_webhooks |d([]) + [ item.json.webhook_key | string + '--' + item.url | replace('webhook_key','gitlab')  ] }}"
      loop: "{{ jt_webhook.results }}"
           
    - debug: 
        msg: "{{ item.id }}:{{ item.name}}"
        verbosity: 2
      loop: "{{ jobtemplate_list.json.results }}"

    - debug: var=jobtemplate_webhooks

## smoke test
    - name: Smoke test for Test Env
      uri:
        url: http://{{ groups['testservers'][0] }}/?name=root
        return_content: yes
      register: test_result

    - debug:
        msg: "Test Env Success"
      when: '"root redhat /bin/bash /root" in test_result.content'

    - name: Smoke Test for Prod Env
      uri:
        url: http://{{ groups['frontends'][0] }}/?name=root
        return_content: yes
      register: prod_result

    - debug:
        msg: "Prod Env Success"
      when: '"root redhat /bin/bash /root" in prod_result.content'
...